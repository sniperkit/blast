// Code generated by protoc-gen-go.
// source: proto/index_service.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetIndexPathResponse struct {
	IndexPath string `protobuf:"bytes,1,opt,name=index_path,json=indexPath" json:"index_path,omitempty"`
}

func (m *GetIndexPathResponse) Reset()                    { *m = GetIndexPathResponse{} }
func (m *GetIndexPathResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetIndexPathResponse) ProtoMessage()               {}
func (*GetIndexPathResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GetIndexPathResponse) GetIndexPath() string {
	if m != nil {
		return m.IndexPath
	}
	return ""
}

type GetIndexMappingResponse struct {
	IndexMapping *google_protobuf.Any `protobuf:"bytes,1,opt,name=index_mapping,json=indexMapping" json:"index_mapping,omitempty"`
}

func (m *GetIndexMappingResponse) Reset()                    { *m = GetIndexMappingResponse{} }
func (m *GetIndexMappingResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetIndexMappingResponse) ProtoMessage()               {}
func (*GetIndexMappingResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetIndexMappingResponse) GetIndexMapping() *google_protobuf.Any {
	if m != nil {
		return m.IndexMapping
	}
	return nil
}

type GetIndexTypeResponse struct {
	IndexType string `protobuf:"bytes,1,opt,name=index_type,json=indexType" json:"index_type,omitempty"`
}

func (m *GetIndexTypeResponse) Reset()                    { *m = GetIndexTypeResponse{} }
func (m *GetIndexTypeResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetIndexTypeResponse) ProtoMessage()               {}
func (*GetIndexTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetIndexTypeResponse) GetIndexType() string {
	if m != nil {
		return m.IndexType
	}
	return ""
}

type GetKvstoreResponse struct {
	Kvstore string `protobuf:"bytes,1,opt,name=kvstore" json:"kvstore,omitempty"`
}

func (m *GetKvstoreResponse) Reset()                    { *m = GetKvstoreResponse{} }
func (m *GetKvstoreResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetKvstoreResponse) ProtoMessage()               {}
func (*GetKvstoreResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GetKvstoreResponse) GetKvstore() string {
	if m != nil {
		return m.Kvstore
	}
	return ""
}

type GetKvconfigResponse struct {
	Kvconfig *google_protobuf.Any `protobuf:"bytes,1,opt,name=kvconfig" json:"kvconfig,omitempty"`
}

func (m *GetKvconfigResponse) Reset()                    { *m = GetKvconfigResponse{} }
func (m *GetKvconfigResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetKvconfigResponse) ProtoMessage()               {}
func (*GetKvconfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetKvconfigResponse) GetKvconfig() *google_protobuf.Any {
	if m != nil {
		return m.Kvconfig
	}
	return nil
}

type PutDocumentRequest struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *PutDocumentRequest) Reset()                    { *m = PutDocumentRequest{} }
func (m *PutDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*PutDocumentRequest) ProtoMessage()               {}
func (*PutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *PutDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutDocumentRequest) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type PutDocumentResponse struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *PutDocumentResponse) Reset()                    { *m = PutDocumentResponse{} }
func (m *PutDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*PutDocumentResponse) ProtoMessage()               {}
func (*PutDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *PutDocumentResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutDocumentResponse) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type GetDocumentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetDocumentRequest) Reset()                    { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()               {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *GetDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDocumentResponse struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *GetDocumentResponse) Reset()                    { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()               {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *GetDocumentResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetDocumentResponse) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type DeleteDocumentRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDocumentRequest) Reset()                    { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()               {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDocumentResponse) Reset()                    { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()               {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *DeleteDocumentResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BulkRequest struct {
	BatchSize      int32                        `protobuf:"varint,1,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	UpdateRequests []*BulkRequest_UpdateRequest `protobuf:"bytes,2,rep,name=update_requests,json=updateRequests" json:"update_requests,omitempty"`
}

func (m *BulkRequest) Reset()                    { *m = BulkRequest{} }
func (m *BulkRequest) String() string            { return proto1.CompactTextString(m) }
func (*BulkRequest) ProtoMessage()               {}
func (*BulkRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *BulkRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *BulkRequest) GetUpdateRequests() []*BulkRequest_UpdateRequest {
	if m != nil {
		return m.UpdateRequests
	}
	return nil
}

type BulkRequest_UpdateRequest struct {
	Method   string                              `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
	Document *BulkRequest_UpdateRequest_Document `protobuf:"bytes,2,opt,name=document" json:"document,omitempty"`
}

func (m *BulkRequest_UpdateRequest) Reset()                    { *m = BulkRequest_UpdateRequest{} }
func (m *BulkRequest_UpdateRequest) String() string            { return proto1.CompactTextString(m) }
func (*BulkRequest_UpdateRequest) ProtoMessage()               {}
func (*BulkRequest_UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11, 0} }

func (m *BulkRequest_UpdateRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *BulkRequest_UpdateRequest) GetDocument() *BulkRequest_UpdateRequest_Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type BulkRequest_UpdateRequest_Document struct {
	Id     string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Fields *google_protobuf.Any `protobuf:"bytes,2,opt,name=fields" json:"fields,omitempty"`
}

func (m *BulkRequest_UpdateRequest_Document) Reset()         { *m = BulkRequest_UpdateRequest_Document{} }
func (m *BulkRequest_UpdateRequest_Document) String() string { return proto1.CompactTextString(m) }
func (*BulkRequest_UpdateRequest_Document) ProtoMessage()    {}
func (*BulkRequest_UpdateRequest_Document) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{11, 0, 0}
}

func (m *BulkRequest_UpdateRequest_Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BulkRequest_UpdateRequest_Document) GetFields() *google_protobuf.Any {
	if m != nil {
		return m.Fields
	}
	return nil
}

type BulkResponse struct {
	PutCount         int32 `protobuf:"varint,1,opt,name=put_count,json=putCount" json:"put_count,omitempty"`
	PutErrorCount    int32 `protobuf:"varint,2,opt,name=put_error_count,json=putErrorCount" json:"put_error_count,omitempty"`
	DeleteCount      int32 `protobuf:"varint,3,opt,name=delete_count,json=deleteCount" json:"delete_count,omitempty"`
	MethodErrorCount int32 `protobuf:"varint,4,opt,name=method_error_count,json=methodErrorCount" json:"method_error_count,omitempty"`
}

func (m *BulkResponse) Reset()                    { *m = BulkResponse{} }
func (m *BulkResponse) String() string            { return proto1.CompactTextString(m) }
func (*BulkResponse) ProtoMessage()               {}
func (*BulkResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *BulkResponse) GetPutCount() int32 {
	if m != nil {
		return m.PutCount
	}
	return 0
}

func (m *BulkResponse) GetPutErrorCount() int32 {
	if m != nil {
		return m.PutErrorCount
	}
	return 0
}

func (m *BulkResponse) GetDeleteCount() int32 {
	if m != nil {
		return m.DeleteCount
	}
	return 0
}

func (m *BulkResponse) GetMethodErrorCount() int32 {
	if m != nil {
		return m.MethodErrorCount
	}
	return 0
}

type SearchRequest struct {
	SearchRequest *google_protobuf.Any `protobuf:"bytes,1,opt,name=search_request,json=searchRequest" json:"search_request,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto1.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *SearchRequest) GetSearchRequest() *google_protobuf.Any {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchResponse struct {
	SearchResult *google_protobuf.Any `protobuf:"bytes,1,opt,name=search_result,json=searchResult" json:"search_result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto1.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *SearchResponse) GetSearchResult() *google_protobuf.Any {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

func init() {
	proto1.RegisterType((*GetIndexPathResponse)(nil), "proto.GetIndexPathResponse")
	proto1.RegisterType((*GetIndexMappingResponse)(nil), "proto.GetIndexMappingResponse")
	proto1.RegisterType((*GetIndexTypeResponse)(nil), "proto.GetIndexTypeResponse")
	proto1.RegisterType((*GetKvstoreResponse)(nil), "proto.GetKvstoreResponse")
	proto1.RegisterType((*GetKvconfigResponse)(nil), "proto.GetKvconfigResponse")
	proto1.RegisterType((*PutDocumentRequest)(nil), "proto.PutDocumentRequest")
	proto1.RegisterType((*PutDocumentResponse)(nil), "proto.PutDocumentResponse")
	proto1.RegisterType((*GetDocumentRequest)(nil), "proto.GetDocumentRequest")
	proto1.RegisterType((*GetDocumentResponse)(nil), "proto.GetDocumentResponse")
	proto1.RegisterType((*DeleteDocumentRequest)(nil), "proto.DeleteDocumentRequest")
	proto1.RegisterType((*DeleteDocumentResponse)(nil), "proto.DeleteDocumentResponse")
	proto1.RegisterType((*BulkRequest)(nil), "proto.BulkRequest")
	proto1.RegisterType((*BulkRequest_UpdateRequest)(nil), "proto.BulkRequest.UpdateRequest")
	proto1.RegisterType((*BulkRequest_UpdateRequest_Document)(nil), "proto.BulkRequest.UpdateRequest.Document")
	proto1.RegisterType((*BulkResponse)(nil), "proto.BulkResponse")
	proto1.RegisterType((*SearchRequest)(nil), "proto.SearchRequest")
	proto1.RegisterType((*SearchResponse)(nil), "proto.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Index service

type IndexClient interface {
	GetIndexPath(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetIndexPathResponse, error)
	GetIndexMapping(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetIndexMappingResponse, error)
	GetIndexType(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetIndexTypeResponse, error)
	GetKvstore(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetKvstoreResponse, error)
	GetKvconfig(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetKvconfigResponse, error)
	PutDocument(ctx context.Context, in *PutDocumentRequest, opts ...grpc.CallOption) (*PutDocumentResponse, error)
	GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error)
	DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error)
	Bulk(ctx context.Context, in *BulkRequest, opts ...grpc.CallOption) (*BulkResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type indexClient struct {
	cc *grpc.ClientConn
}

func NewIndexClient(cc *grpc.ClientConn) IndexClient {
	return &indexClient{cc}
}

func (c *indexClient) GetIndexPath(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetIndexPathResponse, error) {
	out := new(GetIndexPathResponse)
	err := grpc.Invoke(ctx, "/proto.Index/GetIndexPath", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndexMapping(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetIndexMappingResponse, error) {
	out := new(GetIndexMappingResponse)
	err := grpc.Invoke(ctx, "/proto.Index/GetIndexMapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndexType(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetIndexTypeResponse, error) {
	out := new(GetIndexTypeResponse)
	err := grpc.Invoke(ctx, "/proto.Index/GetIndexType", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetKvstore(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetKvstoreResponse, error) {
	out := new(GetKvstoreResponse)
	err := grpc.Invoke(ctx, "/proto.Index/GetKvstore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetKvconfig(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*GetKvconfigResponse, error) {
	out := new(GetKvconfigResponse)
	err := grpc.Invoke(ctx, "/proto.Index/GetKvconfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) PutDocument(ctx context.Context, in *PutDocumentRequest, opts ...grpc.CallOption) (*PutDocumentResponse, error) {
	out := new(PutDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Index/PutDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetDocument(ctx context.Context, in *GetDocumentRequest, opts ...grpc.CallOption) (*GetDocumentResponse, error) {
	out := new(GetDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Index/GetDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error) {
	out := new(DeleteDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Index/DeleteDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Bulk(ctx context.Context, in *BulkRequest, opts ...grpc.CallOption) (*BulkResponse, error) {
	out := new(BulkResponse)
	err := grpc.Invoke(ctx, "/proto.Index/Bulk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/proto.Index/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Index service

type IndexServer interface {
	GetIndexPath(context.Context, *google_protobuf1.Empty) (*GetIndexPathResponse, error)
	GetIndexMapping(context.Context, *google_protobuf1.Empty) (*GetIndexMappingResponse, error)
	GetIndexType(context.Context, *google_protobuf1.Empty) (*GetIndexTypeResponse, error)
	GetKvstore(context.Context, *google_protobuf1.Empty) (*GetKvstoreResponse, error)
	GetKvconfig(context.Context, *google_protobuf1.Empty) (*GetKvconfigResponse, error)
	PutDocument(context.Context, *PutDocumentRequest) (*PutDocumentResponse, error)
	GetDocument(context.Context, *GetDocumentRequest) (*GetDocumentResponse, error)
	DeleteDocument(context.Context, *DeleteDocumentRequest) (*DeleteDocumentResponse, error)
	Bulk(context.Context, *BulkRequest) (*BulkResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterIndexServer(s *grpc.Server, srv IndexServer) {
	s.RegisterService(&_Index_serviceDesc, srv)
}

func _Index_GetIndexPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/GetIndexPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexPath(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndexMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/GetIndexMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexMapping(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndexType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndexType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/GetIndexType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndexType(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetKvstore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetKvstore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/GetKvstore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetKvstore(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetKvconfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetKvconfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/GetKvconfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetKvconfig(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_PutDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).PutDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/PutDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).PutDocument(ctx, req.(*PutDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/GetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetDocument(ctx, req.(*GetDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_DeleteDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).DeleteDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/DeleteDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).DeleteDocument(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Bulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Bulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/Bulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Bulk(ctx, req.(*BulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Index/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Index_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Index",
	HandlerType: (*IndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIndexPath",
			Handler:    _Index_GetIndexPath_Handler,
		},
		{
			MethodName: "GetIndexMapping",
			Handler:    _Index_GetIndexMapping_Handler,
		},
		{
			MethodName: "GetIndexType",
			Handler:    _Index_GetIndexType_Handler,
		},
		{
			MethodName: "GetKvstore",
			Handler:    _Index_GetKvstore_Handler,
		},
		{
			MethodName: "GetKvconfig",
			Handler:    _Index_GetKvconfig_Handler,
		},
		{
			MethodName: "PutDocument",
			Handler:    _Index_PutDocument_Handler,
		},
		{
			MethodName: "GetDocument",
			Handler:    _Index_GetDocument_Handler,
		},
		{
			MethodName: "DeleteDocument",
			Handler:    _Index_DeleteDocument_Handler,
		},
		{
			MethodName: "Bulk",
			Handler:    _Index_Bulk_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Index_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/index_service.proto",
}

func init() { proto1.RegisterFile("proto/index_service.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 702 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0x5b, 0x6f, 0xd3, 0x4c,
	0x10, 0x4d, 0xd2, 0x26, 0x5f, 0x32, 0xb9, 0xf4, 0xd3, 0xf4, 0x42, 0xeb, 0x52, 0x54, 0x56, 0x08,
	0x8a, 0x54, 0xb9, 0x50, 0x84, 0x10, 0xe2, 0xa9, 0xb4, 0xa1, 0x54, 0x05, 0x51, 0xb9, 0xe5, 0x39,
	0x72, 0xe3, 0x6d, 0x63, 0x35, 0xb1, 0x8d, 0xbd, 0xae, 0x48, 0x7f, 0x0f, 0xbf, 0x80, 0x17, 0xf8,
	0x79, 0xc8, 0x7b, 0x71, 0xd6, 0xce, 0x0d, 0xa9, 0x3c, 0x45, 0x3b, 0x73, 0xce, 0x99, 0xe3, 0xd9,
	0xec, 0x81, 0x8d, 0x20, 0xf4, 0x99, 0xbf, 0xe7, 0x7a, 0x0e, 0xfd, 0xde, 0x89, 0x68, 0x78, 0xeb,
	0x76, 0xa9, 0xc9, 0x6b, 0x58, 0xe6, 0x3f, 0xc6, 0xc6, 0xb5, 0xef, 0x5f, 0xf7, 0xe9, 0x1e, 0x3f,
	0x5d, 0xc6, 0x57, 0x7b, 0xb6, 0x37, 0x14, 0x08, 0x63, 0x33, 0xdf, 0xa2, 0x83, 0x80, 0xc9, 0x26,
	0x79, 0x0d, 0x2b, 0xc7, 0x94, 0x9d, 0x24, 0xc2, 0x67, 0x36, 0xeb, 0x59, 0x34, 0x0a, 0x7c, 0x2f,
	0xa2, 0xb8, 0x05, 0x20, 0xa6, 0x05, 0x36, 0xeb, 0xad, 0x17, 0xb7, 0x8b, 0x3b, 0x35, 0xab, 0xe6,
	0x2a, 0x18, 0xb9, 0x80, 0x07, 0x8a, 0xf6, 0xd9, 0x0e, 0x02, 0xd7, 0xbb, 0x4e, 0x99, 0x6f, 0xa1,
	0x29, 0x98, 0x03, 0xd1, 0xe0, 0xe4, 0xfa, 0xfe, 0x8a, 0x29, 0x6c, 0x98, 0xca, 0x86, 0x79, 0xe0,
	0x0d, 0xad, 0x86, 0xab, 0x49, 0xe8, 0x66, 0x2e, 0x86, 0x01, 0x1d, 0x37, 0xc3, 0x86, 0x01, 0xcd,
	0x98, 0x49, 0x60, 0xc4, 0x04, 0x3c, 0xa6, 0xec, 0xf4, 0x36, 0x62, 0x7e, 0x38, 0x22, 0xad, 0xc3,
	0x7f, 0x37, 0xa2, 0x24, 0x19, 0xea, 0x48, 0x8e, 0x61, 0x99, 0xe3, 0xbb, 0xbe, 0x77, 0xe5, 0x8e,
	0x8c, 0xbf, 0x80, 0xea, 0x8d, 0xac, 0xcd, 0xf4, 0x9c, 0xa2, 0x88, 0x05, 0x78, 0x16, 0xb3, 0x23,
	0xbf, 0x1b, 0x0f, 0xa8, 0xc7, 0x2c, 0xfa, 0x2d, 0xa6, 0x11, 0xc3, 0x16, 0x94, 0x5c, 0x47, 0xce,
	0x2c, 0xb9, 0x0e, 0xee, 0x42, 0xe5, 0xca, 0xa5, 0x7d, 0x27, 0x5a, 0x2f, 0xcd, 0x50, 0x95, 0x18,
	0x72, 0x0e, 0xcb, 0x19, 0x4d, 0x69, 0xee, 0x7e, 0xa2, 0x4f, 0xf8, 0x86, 0xe6, 0x18, 0x4d, 0x46,
	0x67, 0x50, 0xff, 0x64, 0xf4, 0x33, 0x58, 0x3d, 0xa2, 0x7d, 0xca, 0xe8, 0xbc, 0xe9, 0x3b, 0xb0,
	0x96, 0x07, 0x4e, 0x36, 0x40, 0x7e, 0x96, 0xa0, 0xfe, 0x3e, 0xee, 0xdf, 0x28, 0xa5, 0x2d, 0x80,
	0x4b, 0x9b, 0x75, 0x7b, 0x9d, 0xc8, 0xbd, 0x13, 0x97, 0x5d, 0xb6, 0x6a, 0xbc, 0x72, 0xee, 0xde,
	0x51, 0x3c, 0x81, 0xa5, 0x38, 0x70, 0x6c, 0x46, 0x3b, 0xa1, 0x20, 0x24, 0xc6, 0x17, 0x76, 0xea,
	0xfb, 0xdb, 0xc2, 0xb1, 0xa9, 0x69, 0x99, 0x5f, 0x39, 0x52, 0x9e, 0xac, 0x56, 0xac, 0x1f, 0x23,
	0xe3, 0x77, 0x11, 0x9a, 0x19, 0x04, 0xae, 0x41, 0x65, 0x40, 0x59, 0xcf, 0x57, 0xfe, 0xe4, 0x09,
	0xdb, 0x50, 0x75, 0xe4, 0x77, 0xc8, 0x35, 0x3d, 0x9f, 0x37, 0xcd, 0x4c, 0x3f, 0x3c, 0xa5, 0x1a,
	0x1f, 0xa1, 0xaa, 0xaa, 0xf7, 0xbc, 0x87, 0x1f, 0x45, 0x68, 0x88, 0xd1, 0x72, 0xab, 0x9b, 0x50,
	0x0b, 0x62, 0xd6, 0xe9, 0xfa, 0xb1, 0xc7, 0xe4, 0xd2, 0xaa, 0x41, 0xcc, 0x0e, 0x93, 0x33, 0x3e,
	0x85, 0xa5, 0xa4, 0x49, 0xc3, 0xd0, 0x0f, 0x25, 0xa4, 0xc4, 0x21, 0xcd, 0x20, 0x66, 0xed, 0xa4,
	0x2a, 0x70, 0x8f, 0xa1, 0xe1, 0xf0, 0x4b, 0x93, 0xa0, 0x05, 0x0e, 0xaa, 0x8b, 0x9a, 0x80, 0xec,
	0x02, 0x8a, 0x9d, 0x64, 0xd4, 0x16, 0x39, 0xf0, 0x7f, 0xd1, 0x19, 0x09, 0x92, 0x4f, 0xd0, 0x3c,
	0xa7, 0x76, 0xd8, 0xed, 0xa9, 0x05, 0xbf, 0x83, 0x56, 0xc4, 0x0b, 0xea, 0xf6, 0x66, 0xbe, 0xcd,
	0x66, 0xa4, 0x93, 0xc9, 0x29, 0xb4, 0x94, 0xda, 0x28, 0x9d, 0x52, 0xb9, 0x28, 0xee, 0xcf, 0x56,
	0x6b, 0x28, 0xb5, 0x04, 0xb9, 0xff, 0xab, 0x0c, 0x65, 0x9e, 0x4d, 0xd8, 0x86, 0x86, 0x1e, 0x9a,
	0xb8, 0x36, 0xc6, 0x6e, 0x27, 0x11, 0x6b, 0x6c, 0xca, 0x2b, 0x9f, 0x94, 0xb0, 0xa4, 0x80, 0xa7,
	0xb0, 0x94, 0x0b, 0xd1, 0xa9, 0x4a, 0x8f, 0x72, 0x4a, 0xb9, 0xd0, 0x25, 0x05, 0xdd, 0x53, 0x12,
	0x8a, 0x7f, 0xed, 0x49, 0x0f, 0x5a, 0x52, 0xc0, 0x03, 0x80, 0x51, 0x96, 0x4e, 0x15, 0xd9, 0x18,
	0x89, 0xe4, 0x62, 0x97, 0x14, 0xf0, 0x10, 0xea, 0x5a, 0xbc, 0x4e, 0xd5, 0x30, 0x74, 0x8d, 0x6c,
	0x14, 0x93, 0x02, 0x7e, 0x80, 0xba, 0x16, 0x83, 0xa8, 0x06, 0x8e, 0xc7, 0x6d, 0xaa, 0x33, 0x21,
	0x35, 0x85, 0x8e, 0x96, 0x69, 0xa8, 0x19, 0x9f, 0xa6, 0x33, 0x21, 0x02, 0x49, 0x01, 0xbf, 0x40,
	0x2b, 0x9b, 0x4e, 0xf8, 0x50, 0xe2, 0x27, 0xa6, 0x9b, 0xb1, 0x35, 0xa5, 0x9b, 0x0a, 0xbe, 0x84,
	0xc5, 0xe4, 0x39, 0x22, 0x8e, 0xc7, 0x82, 0xb1, 0x9c, 0xa9, 0xa5, 0x94, 0x37, 0x50, 0x11, 0xff,
	0x66, 0x5c, 0x91, 0x80, 0xcc, 0x53, 0x31, 0x56, 0x73, 0x55, 0x45, 0xbc, 0xac, 0xf0, 0xfa, 0xab,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x65, 0x4f, 0xdc, 0x7e, 0x47, 0x08, 0x00, 0x00,
}
